---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    region_1: "us-east-1"
    state_1: "present"
    instance_type_1: "t2.micro"
    security: "ansible-security-group"
    key_name: "key.pem"

  tasks:
  - name: Generate an OpenSSH keypair
    community.crypto.openssh_keypair:
      path: "/tmp/{{ key_name }}"
      state: "{{ state_1 }}"

  - name: Check if security group exists
    amazon.aws.ec2_security_group_info:
      filters:
        group-name: "{{ security }}"
      region: "{{ region_1 }}"
    register: security_group_info
    ignore_errors: yes

  - name: Create security group if not exists
    amazon.aws.ec2_security_group:
      name: "{{ security }}"
      description: "ansible created this"
      region: "{{ region_1 }}"
      rules:
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: "0.0.0.0/0"
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: "0.0.0.0/0"
      rules_egress:
        - proto: tcp
          from_port: 0
          to_port: 0
          cidr_ip: "0.0.0.0/0"
      state: present
    when: security_group_info.security_groups | length == 0

  - name: Get AMI ID
    amazon.aws.ec2_ami_info:
      owners: 099720109477
      filters:
        name: "ubuntu/images/hvm-ssd/ubuntu-*-22.04-amd64-server-*"
      region: "{{ region_1 }}"
    register: result

  - name: Create EC2 key pair
    amazon.aws.ec2_key:
      name: "{{ key_name }}"
      region: "{{ region_1 }}"
      state: "{{ state_1 }}"
      key_material: "{{ lookup('file', '/tmp/{{ key_name }}.pub') }}"
    no_log: false
    register: aws_ec2_key_pair

  - name: Create EC2 instance
    amazon.aws.ec2_instance:
      name: "Ansible-EC2"
      region: "{{ region_1 }}"
      image_id: "{{ result.images[-1].image_id }}"
      instance_type: "{{ instance_type_1 }}"
      key_name: "{{ key_name }}"
      security_group: "{{ security }}"
      state: "{{ state_1 }}"

